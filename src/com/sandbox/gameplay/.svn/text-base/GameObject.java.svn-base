package com.touchfootball.gameplay;

import java.util.UUID;

import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.scenes.scene2d.Actor;

public class GameObject extends Actor {
	public TextureRegion skin;

	public float radius;

	public UUID uuid;

	public void setSkin (TextureRegion texture) {
		this.skin = texture;
		super.width = skin.getRegionWidth();
		super.height = skin.getRegionHeight();
	}

	public GameObject (float x, float y, float width, float height) {
		super.width = width;
		super.height = height;
		super.x = x - width / 2;
		super.y = y - height / 2;
		this.radius = (width >= height) ? (width / 2f) : (height / 2f);
		super.rotation = 0;
		this.uuid = UUID.randomUUID();
	}

	@Override
	public void draw (SpriteBatch batch, float parentAlpha) {
		batch.setColor(1, 1, 1, parentAlpha);
		batch.draw(skin, x, y, width, height);
	}

	@Override
	public Actor hit (float x, float y) {
		return x > 0 && x < width && y > 0 && y < height ? this : null;
	}

	public float getX () {
		return super.x;
	}

	public void setX (float x) {
		super.x = x;
	}

	public float getY () {
		return super.y;
	}

	public void setY (float y) {
		super.y = y;
	}

	public float getWidth () {
		return super.width;
	}

	public void setWidth (float w) {
		super.width = w;
	}

	public float getHeight () {
		return super.height;
	}

	public void setHeight (float h) {
		super.height = h;
	}

	public float getRadius () {
		return this.radius;
	}

	public void setRadius (float r) {
		this.radius = r;
	}

	public float radius () {
		return this.radius;
	}

	public void radius (float r) {
		this.radius = r;
	}

	public Vector2 getPosition () {
		return new Vector2(super.x, super.y);
	}

	public void setPosition (Vector2 v) {
		super.x = v.x;
		super.y = v.y;
	}

	public void setPosition (float x, float y) {
		super.x = x;
		super.y = y;
	}

	public Vector2 position () {
		return new Vector2(super.x, super.y);
	}

	public void position (Vector2 v) {
		super.x = v.x;
		super.y = v.y;
	}

	public void position (float x, float y) {
		super.x = x;
		super.y = y;
	}

	public float getRotation () {
		return super.rotation;
	}

	public void setRotation (float r) {
		super.rotation = (r % 360);
	}

	public float rotation () {
		return super.rotation;
	}

	public void rotation (float r) {
		super.rotation = (r % 360);
	}

	public float getAngle () {
		return super.rotation;
	}

	public void setAngle (float a) {
		super.rotation = (a % 360);
	}

	public float angle () {
		return super.rotation;
	}

	public void angle (float a) {
		super.rotation = (a % 360);
	}

	public boolean intersects (GameObject other) {
		if (other != null) {
			float deltaX = other.x - this.x;
			float deltaY = other.y - this.y;
			float radii = this.radius + other.radius;
			
			// a^2 + b^2 = c^2
			float c2 = (deltaX * deltaX) + (deltaY * deltaY);
			
			// Compare squares (Java's "*" is faster than its "/")
			float radii2 = radii * radii;
			return c2 <= radii2;
		}
		return false;
	}

	@Override
	public boolean equals(Object other) {
		GameObject obj = (GameObject) other;
		if (other != null)
			return uuid == obj.uuid;
		return false;
	}
}
